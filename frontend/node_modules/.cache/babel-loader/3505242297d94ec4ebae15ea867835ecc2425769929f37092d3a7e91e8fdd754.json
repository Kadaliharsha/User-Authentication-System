{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kadal\\\\Desktop\\\\nxtwave\\\\frontend\\\\src\\\\components\\\\RegisterForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport API from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegisterForm = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    password: '',\n    company: '',\n    age: '',\n    dob: ''\n  });\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const res = await API.post('/auth/register', formData);\n      alert('Registered successfully. Check terminal for OTP!');\n    } catch (err) {\n      var _err$response, _err$response$data;\n      alert(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || 'Registration failed');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), ['name', 'email', 'password', 'company', 'age', 'dob'].map(field => /*#__PURE__*/_jsxDEV(\"input\", {\n      type: field === 'password' ? 'password' : 'text',\n      name: field,\n      placeholder: field.toUpperCase(),\n      value: formData[field],\n      onChange: handleChange,\n      required: true\n    }, field, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(RegisterForm, \"oiF23dT4UnvoIUM9njP0g9VF7eQ=\");\n_c = RegisterForm;\nexport default RegisterForm;\nvar _c;\n$RefreshReg$(_c, \"RegisterForm\");","map":{"version":3,"names":["React","useState","API","jsxDEV","_jsxDEV","RegisterForm","_s","formData","setFormData","name","email","password","company","age","dob","handleChange","e","target","value","handleSubmit","preventDefault","res","post","alert","err","_err$response","_err$response$data","response","data","error","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","map","field","type","placeholder","toUpperCase","onChange","required","_c","$RefreshReg$"],"sources":["C:/Users/kadal/Desktop/nxtwave/frontend/src/components/RegisterForm.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport API from '../api';\r\n\r\nconst RegisterForm = () => {\r\n  const [formData, setFormData] = useState({\r\n    name: '', email: '', password: '', company: '', age: '', dob: '',\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const res = await API.post('/auth/register', formData);\r\n      alert('Registered successfully. Check terminal for OTP!');\r\n    } catch (err) {\r\n      alert(err.response?.data?.error || 'Registration failed');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <h2>Register</h2>\r\n      {['name', 'email', 'password', 'company', 'age', 'dob'].map((field) => (\r\n        <input\r\n          key={field}\r\n          type={field === 'password' ? 'password' : 'text'}\r\n          name={field}\r\n          placeholder={field.toUpperCase()}\r\n          value={formData[field]}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n      ))}\r\n      <button type=\"submit\">Register</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default RegisterForm;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,GAAG,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC;IACvCQ,IAAI,EAAE,EAAE;IAAEC,KAAK,EAAE,EAAE;IAAEC,QAAQ,EAAE,EAAE;IAAEC,OAAO,EAAE,EAAE;IAAEC,GAAG,EAAE,EAAE;IAAEC,GAAG,EAAE;EAChE,CAAC,CAAC;EAEF,MAAMC,YAAY,GAAIC,CAAC,IAAK;IAC1BR,WAAW,CAAC;MAAC,GAAGD,QAAQ;MAAE,CAACS,CAAC,CAACC,MAAM,CAACR,IAAI,GAAGO,CAAC,CAACC,MAAM,CAACC;IAAM,CAAC,CAAC;EAC9D,CAAC;EAED,MAAMC,YAAY,GAAG,MAAOH,CAAC,IAAK;IAChCA,CAAC,CAACI,cAAc,CAAC,CAAC;IAClB,IAAI;MACF,MAAMC,GAAG,GAAG,MAAMnB,GAAG,CAACoB,IAAI,CAAC,gBAAgB,EAAEf,QAAQ,CAAC;MACtDgB,KAAK,CAAC,kDAAkD,CAAC;IAC3D,CAAC,CAAC,OAAOC,GAAG,EAAE;MAAA,IAAAC,aAAA,EAAAC,kBAAA;MACZH,KAAK,CAAC,EAAAE,aAAA,GAAAD,GAAG,CAACG,QAAQ,cAAAF,aAAA,wBAAAC,kBAAA,GAAZD,aAAA,CAAcG,IAAI,cAAAF,kBAAA,uBAAlBA,kBAAA,CAAoBG,KAAK,KAAI,qBAAqB,CAAC;IAC3D;EACF,CAAC;EAED,oBACEzB,OAAA;IAAM0B,QAAQ,EAAEX,YAAa;IAAAY,QAAA,gBAC3B3B,OAAA;MAAA2B,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAChB,CAAC,MAAM,EAAE,OAAO,EAAE,UAAU,EAAE,SAAS,EAAE,KAAK,EAAE,KAAK,CAAC,CAACC,GAAG,CAAEC,KAAK,iBAChEjC,OAAA;MAEEkC,IAAI,EAAED,KAAK,KAAK,UAAU,GAAG,UAAU,GAAG,MAAO;MACjD5B,IAAI,EAAE4B,KAAM;MACZE,WAAW,EAAEF,KAAK,CAACG,WAAW,CAAC,CAAE;MACjCtB,KAAK,EAAEX,QAAQ,CAAC8B,KAAK,CAAE;MACvBI,QAAQ,EAAE1B,YAAa;MACvB2B,QAAQ;IAAA,GANHL,KAAK;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAOX,CACF,CAAC,eACF/B,OAAA;MAAQkC,IAAI,EAAC,QAAQ;MAAAP,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnC,CAAC;AAEX,CAAC;AAAC7B,EAAA,CApCID,YAAY;AAAAsC,EAAA,GAAZtC,YAAY;AAsClB,eAAeA,YAAY;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}